import React, { useEffect, useState } from "react";
import './App.css';
import { Table } from "react-bootstrap";

function App() {
    const [data, setData] = useState([]);
    const [name, setName] = useState('');
    const [brand, setBrand] = useState('');
    const [Price, setPrice] = useState('');
    const [userId, setUserId] = useState(null);

    useEffect(() => {
        getList();
    }, []);

    function getList() {
        fetch('http://localhost:3001')
            .then((result) => result.json())
            .then((resp) => {
                setData(resp);
                if (resp.length > 0) {
                    setName(resp[0].name);
                    setBrand(resp[0].brand);
                    setPrice(resp[0].Price);
                    setUserId(resp[0]._id);
                }
            })
            .catch((error) => {
                console.error("Error fetching data: ", error);
            });
    }

    function deleteUsers(_id) {
        fetch(`http://localhost:3001/${_id}`, {
            method: 'DELETE'
        })
            .then((result) => result.json())
            .then((resp) => {
                console.log(resp);
                getList(); // Refresh the list after deletion
            })
            .catch((error) => {
                console.error("Error deleting user: ", error);
            });
    }

    function update(_id) {
        const user = data.find(item => item._id === _id);
        if (user) {
            setName(user.name);
            setBrand(user.brand);
            setPrice(user.Price);
            setUserId(user._id);
            console.log("User details:", user);
        } else {
            console.error("User not found for id:", _id);
        }
    }

    function upadateUsers(){
        let users = {name,brand,Price,userId};
        fetch(`http://localhost:3001/${userId}`, {
            method: 'PUT',
            headers:{
                'Accept' : 'application/json',
                'Content-Type' : 'application/json'
            },
            body: JSON.stringify(users)
        })
            .then((result) => result.json())
            .then((resp) => {
                console.log(resp);
                getList(); // Refresh the list after deletion
            })
            .catch((error) => {
                console.error("Error deleting user: ", error);
            });

    }


    return (
        <div className="App">
            <h1>Update and Delete Users with API Call</h1>
            <Table striped bordered hover>
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Name</th>
                        <th>Brand</th>
                        <th>Price</th>
                        <th>Operation</th>
                    </tr>
                </thead>
                <tbody>
                    {
                        data.map((items) => (
                            <tr key={items._id}>
                                <td>{items._id}</td>
                                <td>{items.name}</td>
                                <td>{items.brand}</td>
                                <td>{items.Price}</td>
                                <td>
                                    <button onClick={() => deleteUsers(items._id)}>Delete</button>
                                </td>
                                <td>
                                    <button onClick={() => update(items._id)}>Update</button>
                                </td>
                            </tr>
                        ))
                    }
                </tbody>
            </Table>
            <div>
                <input type="text" value={name} onChange={(e) => setName(e.target.value)} /> <br /> <br />
                <input type="text" value={brand} onChange={(e) => setBrand(e.target.value)} /> <br /> <br />
                <input type="text" value={Price} onChange={(e) => setPrice(e.target.value)} /> <br /> <br />
                <button onClick={upadateUsers}> Update User</button>
            </div>
        </div>
    );
}

export default App;
